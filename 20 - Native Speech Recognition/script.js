//verifica se o navegador suporta o reconhecimento de fala nativo ou usa uma versÃ£o anterior do Webkit
window.SpeechRecognition =
  window.SpeechRecognition || window.webkitSpeechRecognition;

//cria uma instÃ¢ncia do objeto de reconhecimento de fala
const recognition = new SpeechRecognition();

//configuraÃ§Ãµes do reconhecimento de fala
recognition.interimResults = true; //resultados intermediÃ¡rios sÃ£o retornados Ã  medida que o usuÃ¡rio fala
recognition.lang = "pt-BR"; //define o idioma do reconhecimento como portuguÃªs do Brasil

//cria um parÃ¡grafo vazio para exibir o texto transcriado pela fala
let p = document.createElement("p");
const palavras = document.querySelector(".palavras");
palavras.appendChild(p);

//evento que Ã© acionado quando o reconhecimento obtÃ©m resultados
recognition.addEventListener("result", (e) => {
  //obtem a transcriÃ§Ã£o do resultado do reconhecimento
  const transcriÃ§Ã£o = Array.from(e.results)
    .map((result) => result[0])
    .map((result) => result.transcript)
    .join("");

  //substitui palavras ofensivas (cocÃ´, bosta, merda) pelo emoji de cocÃ´ (ğŸ’©)
  const scriptCensurado = transcriÃ§Ã£o.replace(/cocÃ´|bosta|merda/gi, "ğŸ’©");
  p.textContent = scriptCensurado;

  //se o resultado Ã© final, cria um novo parÃ¡grafo para a prÃ³xima transcriÃ§Ã£o
  if (e.results[0].isFinal) {
    p = document.createElement("p");
    palavras.appendChild(p);
  }
});

//evento que Ã© acionado quando o reconhecimento termina (reinicia o reconhecimento)
recognition.addEventListener("end", recognition.start);

//inicia o reconhecimento de fala
recognition.start();
